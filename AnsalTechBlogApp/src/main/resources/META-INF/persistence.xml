<!--
This file defines the configurations which will be used to configure
and create an EntityManagerFactory.

-->
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
            http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">
<!--   Define a persistence unit  -->
    <persistence-unit name="ansaltechblog">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <properties>
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/ansaltechblogdb"/>
            <property name="javax.persistence.jdbc.user" value="postgres"/>
            <property name="javax.persistence.jdbc.password" value="postgres@123"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL95Dialect"/>
            <property name="hibernate.hbm2ddl.auto" value="create-drop"/>
<!--           Create : Every time application starts -> Drop all the existing tables
                        or entities and create new ones(it clears all the existing data)
               Update : If there is a change in Entity structure then make that change
                        and don't drop the tables...keeps existing data and adds columns
               Validate(default) : Check if things in DBMS are in correspondence with the Entities
                        specified in the application

 -->
            <property name="hibernate.jdbc.lob.non_contextual_creation" value="true"/>
        </properties>
    </persistence-unit>
</persistence>